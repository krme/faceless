package screens

import (
	"ht/model"
	"ht/web/view/components"
	"ht/web/view/layout"
)

templ User(user *model.User) {
	@layout.Index("User") {
		@layout.InnerBody(100, 100, 0, 0) {
			<div class="max-w-full lg:w-[60vw]">
				<div class="w-full flex-row lg:flex lg:items-center lg:justify-between mb-8">
					<div class="min-w-0 flex-1">
						<h1>Your account</h1>
						<div class="mt-1 flex flex-col sm:mt-0 sm:flex-row sm:flex-wrap">
							@components.HeaderInfo(user.CreatedAt.Format("2006-01-02"), "event")
							@components.HeaderInfo(user.UpdatedAt.Format("2006-01-02"), "edit_calendar")
						</div>
					</div>
				</div>
			</div>
		}
	}
}

// templ Register() {
// 	@layout.Index("Register") {
// 		<div class="h-screen w-96 flex flex-col bg-[#130D1D] justify-center overflow-hidden pt-5 pb-80">
// 			<div class="h-full flex flex-col gap-24 justify-between">
// 				<div class="items-start gap-4 inline-flex">
// 					<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
// 					<h2 class="text-[#F0F5EE] text-5xl font-normal">Faceless</h2>
// 				</div>
// 				<div class="flex flex-col gap-10">
// 					<div class="justify-start items-start gap-4 inline-flex">
// 						<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
// 						<div class="flex-col justify-start items-start gap-1 inline-flex">
// 							<a href="/register" class="text-[#F0F5EE] text-2xl font-semibold cursor-pointer">
// 								<div class="text-[#F0F5EE] text-2xl font-semibold">Sign up</div>
// 								<div class="text-[#F0F5EE] text-sm font-normal">Create your account.</div>
// 							</a>
// 						</div>
// 					</div>
// 					<div class="self-stretch justify-start items-start gap-4 inline-flex">
// 						<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
// 						<div class="flex-col justify-start items-start gap-1 inline-flex">
// 							<a href="/user/onboardingStart" class="text-[#F0F5EE] text-2xl font-semibold cursor-pointer">
// 								<div class="text-[#F0F5EE] text-2xl font-semibold">IDnow Verification </div>
// 								<div class="text-[#F0F5EE] text-sm font-normal">The last time you‚Äôll need to verify through IDnow</div>
// 							</a>
// 						</div>
// 					</div>
// 					<div class="justify-start items-start gap-4 inline-flex">
// 						<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
// 						<div class="flex-col justify-start items-start gap-1 inline-flex">
// 							<a href="/user/onboardingRecording" class="text-[#F0F5EE] text-2xl font-semibold cursor-pointer">
// 								<div class="text-[#F0F5EE] text-2xl font-semibold">Voice Recordings</div>
// 								<div class="text-[#F0F5EE] text-sm font-normal">Record 3 simple sentences to get verified</div>
// 							</a>
// 						</div>
// 					</div>
// 				</div>
// 			</div>
// 		</div>
// 		<div class="grow flex flex-col self-stretch bg-[#F0F5EE] justify-center items-center">
// 			@components.Form(components.FormConf{HxPost: "/auth/registerWithEmail", Class: "mb-4 w-96"}) {
// 				<h1 class="text-2xl font-bold pb-4">
// 					Sign up now
// 				</h1>
// 				<div class="mb-4">
// 					@components.InputText("Email", "Your email", "email", "email@example.com", "email", "")
// 				</div>
// 				<div class="mb-6">
// 					@components.InputPassword("Password", "password", "password")
// 				</div>
// 				<div>
// 					<span class="text-zinc-500 text-sm font-normal font-['Inter'] leading-tight">By clicking continue, you agree to our<br/></span>
// 					<span class="text-zinc-500 text-sm font-normal font-['Inter'] underline leading-tight">Terms of Service</span>
// 					<span class="text-zinc-500 text-sm font-normal font-['Inter'] leading-tight">and </span>
// 					<span class="text-zinc-500 text-sm font-normal font-['Inter'] underline leading-tight">Privacy Policy</span>
// 					<span class="text-zinc-500 text-sm font-normal font-['Inter'] leading-tight">.</span>
// 				</div>
// 				<input
// 					class="w-full button_primary text-white font-bold p-2 my-2 rounded-lg cursor-pointer"
// 					type="submit"
// 					value="Sign up"
// 				/>
// 				<div class="flex flex-row justify-center">
// 					<a class="inline-block align-baseline font-medium text-sm text-[#130D1D] hover:text-[#2f2047] cursor-pointer" href="/login">
// 						Already registered?
// 					</a>
// 				</div>
// 			}
// 		</div>
// 	}
// }
templ OnboardingStart() {
	@layout.Index("IDNow") {
		<div class="h-screen w-96 flex flex-col bg-[#130D1D] justify-center overflow-hidden pt-5 pb-80">
			<div class="h-full flex flex-col gap-24 justify-between">
				<div class="items-start gap-4 inline-flex">
					<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
					<h2 class="text-[#F0F5EE] text-5xl font-normal">Faceless</h2>
				</div>
				<div class="flex flex-col gap-10">
					<div class="justify-start items-start gap-4 inline-flex">
						<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
						<div class="flex-col justify-start items-start gap-1 inline-flex">
							<a href="/register" class="text-[#F0F5EE] text-2xl font-semibold cursor-pointer">
								<div class="text-[#F0F5EE] text-2xl font-semibold">Sign up</div>
								<div class="text-[#F0F5EE] text-sm font-normal">Create your account.</div>
							</a>
						</div>
					</div>
					<div class="self-stretch justify-start items-start gap-4 inline-flex">
						<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
						<div class="flex-col justify-start items-start gap-1 inline-flex">
							<a href="/user/onboardingStart" class="text-[#F0F5EE] text-2xl font-semibold cursor-pointer">
								<div class="text-[#F0F5EE] text-2xl font-semibold">IDnow Verification </div>
								<div class="text-[#F0F5EE] text-sm font-normal">The last time you‚Äôll need to verify through IDnow</div>
							</a>
						</div>
					</div>
					<div class="justify-start items-start gap-4 inline-flex">
						<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
						<div class="flex-col justify-start items-start gap-1 inline-flex">
							<a href="/user/onboardingRecording" class="text-[#F0F5EE] text-2xl font-semibold cursor-pointer">
								<div class="text-[#F0F5EE] text-2xl font-semibold">Voice Recordings</div>
								<div class="text-[#F0F5EE] text-sm font-normal">Record 3 simple sentences to get verified</div>
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="grow shrink basis-0 self-stretch py-10 bg-[#F0F5EE] flex-col justify-center items-center gap-6 inline-flex">
			<div class="flex-col justify-start items-center gap-4 flex">
				<div class="py-2 flex-col justify-center items-center gap-1 flex">
					<div class="justify-center items-center gap-2.5 inline-flex">
						<div class="text-[#150D1D] text-2xl font-semibold leading-loose">Start Verification</div>
					</div>
					<div class="text-zinc-500 text-sm font-normal leading-tight">The last time you‚Äôll have to do this. We promise.</div>
				</div>
				<div class="h-9 flex-col justify-center items-center gap-6 flex w-full place-self-center">
					<div class=" h-9 flex-col justify-center items-center gap-2 flex w-56 place-self-center">
						<a class="self-stretch h-9 px-4 py-2  rounded-md shadow-sm justify-center items-center gap-1 inline-flex button_primary cursor-pointer place-self-center" href="/user/onboardingRecording">
							<div class="text-[#F9F9F9] font-bold">Go to</div>
							// <img class="w-[21px] h-[21px] rounded-[3px] border border-black/20" src="https://via.placeholder.com/21x21"/>
						</a>
					</div>
				</div>
			</div>
		</div>
	}
}

templ OnboardingRecording(user *model.User, step int) {
	@layout.Index("Reference recording") {
		@Sidebar()
		@RecordSentence("A sentient toaster serenaded the moon in Morse code.")
	}
}

templ OnboardingSuccess() {
	@layout.Index("Reference recording") {
		<script>
			const jsConfetti = new JSConfetti()
			jsConfetti.addConfetti({
				// emojis: ['üåà', '‚ö°Ô∏è', 'üí•', '‚ú®', 'üí´', 'üå∏'],
				confettiColors: [
					'#ff0a54', '#ff477e', '#ff7096', '#ff85a1', '#fbb1bd', '#f9bec7',
				],
				emojiSize: 30,
				confettiNumber: 500,
			})
		</script>
	}
}

templ Sidebar() {
	<div class="h-screen w-96 flex flex-col bg-[#130D1D] justify-center overflow-hidden pt-5 pb-80">
		<div class="h-full flex flex-col gap-24 justify-between">
			<div class="items-start gap-4 inline-flex">
				<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
				<h2 class="text-[#F0F5EE] text-5xl font-normal">Faceless</h2>
			</div>
			<div class="flex flex-col gap-10">
				<div class="justify-start items-start gap-4 inline-flex">
					<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
					<div class="flex-col justify-start items-start gap-1 inline-flex">
						<a href="/register" class="text-[#F0F5EE] text-2xl font-semibold cursor-pointer">
							<div class="text-[#F0F5EE] text-2xl font-semibold">Sign up</div>
							<div class="text-[#F0F5EE] text-sm font-normal">Create your account.</div>
						</a>
					</div>
				</div>
				<div class="self-stretch justify-start items-start gap-4 inline-flex">
					<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
					<div class="flex-col justify-start items-start gap-1 inline-flex">
						<a href="/user/onboardingStart" class="text-[#F0F5EE] text-2xl font-semibold cursor-pointer">
							<div class="text-[#F0F5EE] text-2xl font-semibold">IDnow Verification </div>
							<div class="text-[#F0F5EE] text-sm font-normal">The last time you‚Äôll need to verify through IDnow</div>
						</a>
					</div>
				</div>
				<div class="justify-start items-start gap-4 inline-flex">
					<div class="w-[30px] self-stretch flex-col justify-center items-center gap-2.5 inline-flex"></div>
					<div class="flex-col justify-start items-start gap-1 inline-flex">
						<a href="/user/onboardingRecording" class="text-[#F0F5EE] text-2xl font-semibold cursor-pointer">
							<div class="text-[#F0F5EE] text-2xl font-semibold">Voice Recordings</div>
							<div class="text-[#F0F5EE] text-sm font-normal">Record 3 simple sentences to get verified</div>
						</a>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ RecordSentence(sentence string) {
	<div
		class="grow flex flex-col self-stretch bg-[#F0F5EE] justify-center items-center px-12"
		_="init 
			set $step to 1
			put 'Record yourself saying the following sentence ' + $step + '/3' into #stepHeader
			add @disabled to #nextButton"
	>
		<div class="w-full flex-row lg:flex lg:items-center lg:justify-between mb-2">
			<div class="min-w-0 flex-1">
				<div class="flex flex-col items-center justify-center">
					<h1 id="stepHeader"></h1>
					<span class="text-gray-600">"{ sentence }"</span>
					<!-- TODO: add select state feature (if selected ) - check -->
					<!-- TODO: add recording feature -->
					<!-- TODO: Add logic for sending requests to server - where are the endpoints? -->
					<div class="flex gap-4 w-full">
						<div class="flex gap-2 my-5">
							<button
								id="restartButton1"
								type="button"
								class="items-center p-2 rounded-full hover:bg-slate-300 hidden"
								_="on click
									hide me
									set $isRecording to false
									remove .bg-green-600 from next <button/>
									remove @disabled from #nextButton
									add .bg-red-600 to next <button/>
									add .hover:bg-red-500 to next <button/>
									put 'Mic' into .material-icons in next <button/>
									add .hidden to me"
							>
								<span class="material-icons black text-xxl">restart_alt</span>
							</button>
							<button
								id="recordButton"
								type="button"
								class="inline-flex items-center p-2 rounded-full bg-red-600 hover:bg-red-500"
								_="init
									set $isRecording to false
								  on click 
									if $isRecording is false
										startRecording()
										set $isRecording to true
										remove .bg-green-600 from me
										add .bg-red-600 to me
										add .hover:bg-red-500 to me
										put 'stop' into .material-icons in me
										remove .hidden from previous <button/>
										add .inline-flex to previous <button/>
									else
										stopRecording()
										set $isRecording to false
										remove .bg-red-600 from me
										remove .hover:bg-red-500 from me
										remove @disabled from #nextButton
										add .bg-green-600 to me
										add @disabled to me
										put 'check' into .material-icons in me
										remove .hidden from #sparkle
									end"
							>
								<span class="material-icons black text-xxl">mic</span>
							</button>
						</div>
						<div class="flex flex-col items-center justify-center w-full">
							<div class="w-full border-t border_primary my-5"></div>
						</div>
					</div>
					<input
						class="w-56 button_primary text-white font-bold p-2 my-2 rounded-lg cursor-pointer"
						id="nextButton"
						type="submit"
						value="Next Recording"
						_="on click
							if $step is 3
								go to url http://localhost:2323/user/onboardingSuccess
							else
								set $step to $step + 1
								put 'Record yourself saying the following sentence ' + $step + '/3' into #stepHeader
								set $isRecording to false
								remove .bg-green-600 from #nextButton
								remove @disabled from #nextButton
								remove @disabled from #recordButton
								add .bg-red-600 to #recordButton
								add .hover:bg-red-500 to #recordButton
								put 'Mic' into .material-icons in #recordButton
								add .hidden to #restartButton1
								add @disabled to me
								add .hidden to #sparkle
							if $step is 3
									put 'Evaluate' into @value of me"
					/>
					<p class="text-indigo-500 hidden" id="sparkle">‚ú® Successfully recorded!</p>
				</div>
			</div>
		</div>
	</div>
	<script>
		var mediaRecorder;

		async function startRecording() {
			if (!window.AudioContext || 
					!window.MediaStreamAudioSourceNode || 
					!window.AudioWorkletNode) {
					alert('Your browser does not support the required APIs.');
					return;
			}

			// Request access to the user's microphone
			const micStream = await navigator
					.mediaDevices
					.getUserMedia({ audio: true });

			mediaRecorder = new MediaRecorder(micStream)

			mediaRecorder.start();
			console.log("recorder started", mediaRecorder.state);
		}

		async function stopRecording() {
			mediaRecorder.stop();
			console.log("recorder stopped", mediaRecorder.state);

			const chunks = [];

			mediaRecorder.ondataavailable = (e) => {
				chunks.push(e.data);
			};

			mediaRecorder.onstop = async (e) => {
				console.log("data available after MediaRecorder.stop() called.");

				const blob = new Blob(chunks, { type: mediaRecorder.mimeType });
				const formData = new FormData();
				formData.append("recording", blob);

				var step = '1';
				var splitUrl = window.location.pathname.split('/')
				if (splitUrl.length > 1) {
						step = splitUrl.pop();
				}

				response = await fetch(`/user/createReferenceRecording/${step}`, {
						method: 'POST',
						body: formData,
				});
				if (response.ok) {
						alert("Audio saved successfully");
						console.log("response", response);
				} else {
						alert("Saving audio failed. Please try again.");
				}
			};
		}
	</script>
}
